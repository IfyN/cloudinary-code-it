{
  "version": 3,
  "sources": ["../../@cloudinary/transformation-builder-sdk/qualifiers/compass.js"],
  "sourcesContent": ["import { CompassQualifier } from \"./gravity/qualifiers/compass/CompassQualifier.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South center part (bottom center).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction south() {\n    return new CompassQualifier('south');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North center part (top center).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction north() {\n    return new CompassQualifier('north');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description Middle east part (right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction east() {\n    return new CompassQualifier('east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description Middle west part (left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction west() {\n    return new CompassQualifier('west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North west corner (top left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction northWest() {\n    return new CompassQualifier('north_west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description North east corner (top right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction northEast() {\n    return new CompassQualifier('north_east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South west corner (bottom left).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction southWest() {\n    return new CompassQualifier('south_west');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description South east corner (bottom right).\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction southEast() {\n    return new CompassQualifier('south_east');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Compass\n * @description The center of the image.\n * @return {Qualifiers.Compass.CompassQualifier} Compass\n */\nfunction center() {\n    return new CompassQualifier('center');\n}\n/**\n * @description Defines the focal Compass for certain methods of cropping.\n * @namespace Compass\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\nclass Compass {\n}\nCompass.north = north;\nCompass.west = west;\nCompass.east = east;\nCompass.south = south;\nCompass.center = center;\nCompass.northWest = northWest;\nCompass.southEast = southEast;\nCompass.southWest = southWest;\nCompass.northEast = northEast;\nexport { Compass, north, west, east, south, center, northWest, southEast, southWest, northEast };\n"],
  "mappings": ";;;;;;;AAOA,SAAS,QAAQ;AACb,SAAO,IAAI,iBAAiB,OAAO;AACvC;AAOA,SAAS,QAAQ;AACb,SAAO,IAAI,iBAAiB,OAAO;AACvC;AAOA,SAAS,OAAO;AACZ,SAAO,IAAI,iBAAiB,MAAM;AACtC;AAOA,SAAS,OAAO;AACZ,SAAO,IAAI,iBAAiB,MAAM;AACtC;AAOA,SAAS,YAAY;AACjB,SAAO,IAAI,iBAAiB,YAAY;AAC5C;AAOA,SAAS,YAAY;AACjB,SAAO,IAAI,iBAAiB,YAAY;AAC5C;AAOA,SAAS,YAAY;AACjB,SAAO,IAAI,iBAAiB,YAAY;AAC5C;AAOA,SAAS,YAAY;AACjB,SAAO,IAAI,iBAAiB,YAAY;AAC5C;AAOA,SAAS,SAAS;AACd,SAAO,IAAI,iBAAiB,QAAQ;AACxC;AAOA,IAAM,UAAN,MAAc;AACd;AACA,QAAQ,QAAQ;AAChB,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf,QAAQ,QAAQ;AAChB,QAAQ,SAAS;AACjB,QAAQ,YAAY;AACpB,QAAQ,YAAY;AACpB,QAAQ,YAAY;AACpB,QAAQ,YAAY;",
  "names": []
}
