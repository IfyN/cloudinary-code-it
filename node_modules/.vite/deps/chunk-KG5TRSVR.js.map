{
  "version": 3,
  "sources": ["../../@cloudinary/url-gen/qualifiers.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/textAlignment.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/streamingProfile.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/simulateColorBlind.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/rotate/RotationModeQualifierValue.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/rotationMode.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/region/NamedRegion.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/region/CustomRegion.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/region/RectangleRegion.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/region.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/quality.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/outlineMode.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/improveMode.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/gradientDirection/GradientDirectionQualifierValue.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/gradientDirection.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/format.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/fontHinting.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/expression/ExpressionQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/expression.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/dither.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/colorSpace.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/color.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BackgroundQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseCommonBackground.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/auto/BackgroundAutoBorderQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseGradientBackground.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/gradient/BackgroundBorderGradientQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/auto/BackgroundAutoPredominantQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/gradient/BackgroundPredominantGradientQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/BlurredBackgroundAction.js", "../../@cloudinary/transformation-builder-sdk/internal/utils/encodePromptComponents.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/BackgroundGenerativeFillQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/audioFrequency.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/audioCodec.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/aspectRatio/AspectRatioQualifierValue.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/aspectRatio.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/artisticFilter.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/animatedFormat/AnimatedFormatQualifierValue.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/animatedFormat.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/chromaSubSampling.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/dpr.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/GradientFade.js"],
  "sourcesContent": ["export { TextDecoration } from \"./qualifiers/textDecoration.js\";\nexport { TextAlignment } from \"./qualifiers/textAlignment.js\";\nexport { Stroke } from \"./qualifiers/textStroke.js\";\nexport { StreamingProfile } from \"./qualifiers/streamingProfile.js\";\nexport { SimulateColorBlind } from \"./qualifiers/simulateColorBlind.js\";\nexport { RotationMode } from \"./qualifiers/rotationMode.js\";\nexport { Region } from \"./qualifiers/region.js\";\nexport { Quality } from \"./qualifiers/quality.js\";\nexport { Position } from \"./qualifiers/position.js\";\nexport { OutlineMode } from \"./qualifiers/outlineMode.js\";\nexport { ImproveMode } from \"./qualifiers/improveMode.js\";\nexport { GradientDirection } from \"./qualifiers/gradientDirection.js\";\nexport { Format } from \"./qualifiers/format.js\";\nexport { FontWeight } from \"./qualifiers/fontWeight.js\";\nexport { FontStyle } from \"./qualifiers/fontStyle.js\";\nexport { FontHinting } from \"./qualifiers/fontHinting.js\";\nexport { Expression } from \"./qualifiers/expression.js\";\nexport { Dither } from \"./qualifiers/dither.js\";\nexport { ColorSpace } from \"./qualifiers/colorSpace.js\";\nexport { Color } from \"./qualifiers/color.js\";\nexport { Background } from \"./qualifiers/background.js\";\nexport { AudioFrequency } from \"./qualifiers/audioFrequency.js\";\nexport { AudioCodec } from \"./qualifiers/audioCodec.js\";\nexport { AspectRatio } from \"./qualifiers/aspectRatio.js\";\nexport { ArtisticFilter } from \"./qualifiers/artisticFilter.js\";\nexport { AnimatedFormat } from \"./qualifiers/animatedFormat.js\";\nexport { Gravity } from \"./qualifiers/gravity.js\";\nexport { ChromaSubSampling } from \"./qualifiers/chromaSubSampling.js\";\nexport { Dpr } from \"./qualifiers/dpr.js\";\nexport { Source } from \"./qualifiers/source.js\";\nexport { GradientFade } from \"./qualifiers/GradientFade.js\";\n", "/**\n * @description Contains functions to select the alignment of the text.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/layers#text_layer_options|Adding text overlays to images}\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_layers#text_layer_options|Adding text overlays to videos}\n * @memberOf Qualifiers\n * @namespace TextAlignment\n * @see To be used with {@link Qualifiers.TextStyle|Text Style}\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.TextAlignment\n */\nfunction left() {\n    return 'left';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.TextAlignment\n */\nfunction right() {\n    return 'right';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.TextAlignment\n */\nfunction center() {\n    return 'center';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.TextAlignment\n */\nfunction start() {\n    return 'start';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.TextAlignment\n */\nfunction end() {\n    return 'end';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.TextAlignment\n */\nfunction justify() {\n    return 'justify';\n}\nconst TextAlignment = { left, right, center, end, justify, start };\nexport { TextAlignment, left, right, center, end, justify, start };\n", "/**\n * @description Qualifiers for applying an ordered dither filter to the image.\n * @namespace StreamingProfile\n * @memberOf Qualifiers\n * @see Visit {@link Actions\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.StreamingProfile\n * @return {string}\n */\nfunction fullHd() {\n    return 'full_hd';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.StreamingProfile\n * @return {string}\n */\nfunction hd() {\n    return 'hd';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.StreamingProfile\n * @return {string}\n */\nfunction sd() {\n    return 'sd';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.StreamingProfile\n * @return {string}\n */\nfunction fullHdWifi() {\n    return 'full_hd_wifi';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.StreamingProfile\n * @return {string}\n */\nfunction fullHdLean() {\n    return 'full_hd_lean';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.StreamingProfile\n * @return {string}\n */\nfunction hdLean() {\n    return 'hd_lean';\n}\nconst StreamingProfile = {\n    hd,\n    sd,\n    hdLean,\n    fullHd,\n    fullHdLean,\n    fullHdWifi\n};\nexport { hd, sd, hdLean, fullHd, fullHdLean, fullHdWifi, StreamingProfile };\n", "/**\n * @description Contains functions to select the type of color-blind condition to simulate.\n * <b>Learn more</b>: {@link https://cloudinary.com/blog/open_your_eyes_to_color_accessibility|Blog: Open your Eyes to Color Accessibility}\n * @memberOf Qualifiers\n * @namespace SimulateColorBlindValues\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction deuteranopia() {\n    return 'deuteranopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction protanopia() {\n    return 'protanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction tritanopia() {\n    return 'tritanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction tritanomaly() {\n    return 'tritanomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction deuteranomaly() {\n    return 'deuteranomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction coneMonochromacy() {\n    return 'cone_monochromacy';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction rodMonochromacy() {\n    return 'rod_monochromacy';\n}\nconst SimulateColorBlind = {\n    coneMonochromacy,\n    deuteranomaly,\n    deuteranopia,\n    protanopia,\n    rodMonochromacy,\n    tritanomaly,\n    tritanopia\n};\nexport { SimulateColorBlind, coneMonochromacy, deuteranomaly, deuteranopia, protanopia, rodMonochromacy, tritanomaly, tritanopia };\n", "import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description Acts as a marker for inputs passed into Rotate.mode()\n * @memberOf Qualifiers.RotationMode\n * @extends SDK.QualifierValue\n */\nclass RotationModeQualifierValue extends QualifierValue {\n    constructor(val) {\n        super();\n        this.val = val;\n    }\n    toString() {\n        return this.val;\n    }\n}\nexport { RotationModeQualifierValue };\n", "/**\n * @description Contains functions to select the rotation mode.\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#rotating_images|Rotating images}\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/video_effects_and_enhancements#rotating_videos|Rotating videos}\n * @memberOf Qualifiers\n * @namespace RotationMode\n * @see Visit {@link Actions.Rotate|Rotate Action} for an example\n */\nimport { RotationModeQualifierValue } from \"./rotate/RotationModeQualifierValue.js\";\n/**\n * @summary qualifier\n * @description Rotate image 90 degrees clockwise only if the requested aspect ratio does not match the image's aspect ratio.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction autoRight() {\n    return new RotationModeQualifierValue('auto_right');\n}\n/**\n * @summary qualifier\n * @description Rotate image 90 degrees counterclockwise only if the requested aspect ratio does not match the image's aspect ratio.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction autoLeft() {\n    return new RotationModeQualifierValue('auto_left');\n}\n/**\n * @summary qualifier\n * @description Vertical mirror flip of the image.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction verticalFlip() {\n    return new RotationModeQualifierValue('vflip');\n}\n/**\n * @summary qualifier\n * @description Horizontal mirror flip of the image.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction horizontalFlip() {\n    return new RotationModeQualifierValue('hflip');\n}\n/**\n * @summary qualifier\n * @description By default, the image is automatically rotated according to the EXIF data stored by the camera when the image\n *                           was taken. Set the angle to 'ignore' if you do not want the image to be automatically rotated.\n * @memberOf Qualifiers.RotationMode\n * @return {Qualifiers.RotationMode.RotationModeQualifierValue}\n */\nfunction ignore() {\n    return new RotationModeQualifierValue('ignore');\n}\nconst RotationMode = { autoLeft, autoRight, horizontalFlip, ignore, verticalFlip };\nexport { RotationMode, autoLeft, autoRight, horizontalFlip, ignore, verticalFlip };\n", "import { Action } from \"../../internal/Action.js\";\n/**\n * @memberOf Qualifiers.Region\n */\nclass NamedRegion extends Action {\n    constructor(type) {\n        super();\n        this.regionType = type;\n        this._actionModel.regionType = type;\n    }\n}\nexport { NamedRegion };\n", "import { NamedRegion } from \"./NamedRegion.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Qualifiers.Region\n */\nclass CustomRegion extends NamedRegion {\n    constructor() {\n        super('custom');\n    }\n    /**\n     * @description The x position in pixels.\n     * @param {number | string} x\n     */\n    x(x) {\n        this._actionModel.x = x;\n        this.addQualifier(new Qualifier('x', x));\n        return this;\n    }\n    /**\n     * @description The y position in pixels.\n     * @param {number | string} y\n     */\n    y(y) {\n        this._actionModel.y = y;\n        this.addQualifier(new Qualifier('y', y));\n        return this;\n    }\n    /**\n     * @description The width of the region in pixels.\n     * @param {number | string} width\n     */\n    width(width) {\n        this._actionModel.width = width;\n        this.addQualifier(new Qualifier('w', width));\n        return this;\n    }\n    /**\n     * @description The height of the region in pixels.\n     * @param {number | string} height\n     */\n    height(height) {\n        this._actionModel.height = height;\n        this.addQualifier(new Qualifier('h', height));\n        return this;\n    }\n    static fromJson(model) {\n        const customRegion = new CustomRegion();\n        if (model.width) {\n            customRegion.width(model.width);\n        }\n        if (model.height) {\n            customRegion.height(model.height);\n        }\n        if (model.x) {\n            customRegion.x(model.x);\n        }\n        if (model.y) {\n            customRegion.y(model.y);\n        }\n        return customRegion;\n    }\n}\nexport { CustomRegion };\n", "import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @memberOf Qualifiers.Region\n */\nclass RectangleRegion extends Action {\n    /**\n     * Rectangle defines a region where action will be applied\n     *\n     * @param {number} x The x position in pixels\n     * @param {number} y The y position in pixels\n     * @param {number} width The width in pixels\n     * @param {number} height The height in pixels\n     */\n    constructor(x, y, width, height) {\n        super();\n        this.addQualifier(new Qualifier(\"x\", x));\n        this.addQualifier(new Qualifier(\"y\", y));\n        this.addQualifier(new Qualifier(\"w\", width));\n        this.addQualifier(new Qualifier(\"h\", height));\n        this._actionModel = {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    toString() {\n        const { x, y, width, height } = this._actionModel;\n        return `(x_${x};y_${y};w_${width};h_${height})`;\n    }\n}\nexport { RectangleRegion };\n", "import { CustomRegion } from \"./region/CustomRegion.js\";\nimport { NamedRegion } from \"./region/NamedRegion.js\";\nimport { RectangleRegion } from \"./region/RectangleRegion.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Region\n * @return {Qualifiers.Region.CustomRegion}\n */\nfunction custom() {\n    return new CustomRegion();\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Region\n * @return {Qualifiers.Region.NamedRegion}\n */\nfunction faces() {\n    return new NamedRegion(\"faces\");\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Region\n * @return {Qualifiers.Region.NamedRegion}\n */\nfunction ocr() {\n    return new NamedRegion(\"ocr_text\");\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Region\n * @return {Qualifiers.Region.RectangleRegion}\n */\nfunction rectangle(x, y, width, height) {\n    return new RectangleRegion(x, y, width, height);\n}\n/**\n * @description Contains functions to select the type of region, used with Effect.blur() and Effect.pixelate().\n * <b>See also</b>: {@link Actions.Effect.BlurAction|Blur Action}\n * <b>See also</b>: {@link Actions.Effect.Pixelate|Blur Action}\n * <b>See also</b>: {@link Actions.Effect|Possible effects}\n * @namespace Region\n * @memberOf Qualifiers\n */\nconst Region = { ocr, faces, custom, rectangle };\nexport { Region, ocr, faces, custom, rectangle };\n", "/**\n * @memberOf Qualifiers\n * @namespace Quality\n * @see Visit {@link Actions.Delivery.quality|Delivery Quality} for an example\n */\n/**\n * @summary qualifier\n * @description Quality auto\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction auto() { return 'auto'; }\n/**\n * @summary qualifier\n * @description Quality best\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction autoBest() { return 'auto:best'; }\n/**\n * @summary qualifier\n * @description Quality eco\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction autoEco() { return 'auto:eco'; }\n/**\n * @summary qualifier\n * @description Quality good\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction autoGood() { return 'auto:good'; }\n/**\n * @summary qualifier\n * @description Quality low\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction autoLow() { return 'auto:low'; }\n/**\n * @summary qualifier\n * @description Quality jpegmini\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction jpegmini() { return 'jpegmini'; }\n/**\n * @summary qualifier\n * @description Quality jpegmini best\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction jpegminiBest() { return 'jpegmini:0'; }\n/**\n * @summary qualifier\n * @description Quality jpegmini high\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction jpegminiHigh() { return 'jpegmini:1'; }\n/**\n * @summary qualifier\n * @quality\n * @description Quality jpegmini medium\n * @memberOf Qualifiers.Quality\n * @return {string}\n */\nfunction jpegminiMedium() { return 'jpegmini:2'; }\nconst Quality = { auto, autoBest, autoEco, autoGood, autoLow, jpegmini, jpegminiBest, jpegminiHigh, jpegminiMedium };\nexport { Quality, auto, autoBest, autoEco, autoGood, autoLow, jpegmini, jpegminiBest, jpegminiHigh, jpegminiMedium };\n", "/**\n * @description Contains functions to select the type of improvement to perform when using Adjust.improve().\n * @namespace Outline\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Effect|Effect Action} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Outline\n */\nfunction fill() {\n    return 'fill';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Outline\n */\nfunction inner() {\n    return 'inner';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Outline\n */\nfunction innerFill() {\n    return 'inner_fill';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Outline\n */\nfunction outer() {\n    return 'outer';\n}\nconst OutlineMode = {\n    outer,\n    inner,\n    innerFill,\n    fill\n};\nexport { OutlineMode, outer, inner, innerFill, fill };\n", "/**\n * @description Defines the available modes to use with the improve effect.\n * @namespace ImproveMode\n * @memberOf Qualifiers\n * @see To be used with an {@link Actions.Adjust.ImproveAction|Adjust Improve}\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen/instance/Cloudinary\";\n * import {outdoor} from \"@cloudinary/url-gen/qualifiers/improveMode\";\n * import {improve} from \"@cloudinary/url-gen/actions/adjust\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.adjust(improve().mode(outdoor()));\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ImproveMode\n * @description Use this mode to get better results on outdoor images.\n * @return string\n */\nfunction outdoor() {\n    return 'outdoor';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ImproveMode\n * @description Use this mode to get better results on images with indoor lighting and shadows.\n * @return string\n */\nfunction indoor() {\n    return 'indoor';\n}\nconst ImproveMode = {\n    indoor,\n    outdoor\n};\nexport { outdoor, indoor, ImproveMode };\n", "import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.GradientDirection\n * @extends {SDK.QualifierValue}\n */\nclass GradientDirectionQualifierValue extends QualifierValue {\n}\nexport { GradientDirectionQualifierValue };\n", "import { GradientDirectionQualifierValue } from \"./gradientDirection/GradientDirectionQualifierValue.js\";\n/**\n * @description Defines the direction for a background gradient fade effect.\n * @memberOf Qualifiers\n * @namespace GradientDirection\n */\n/**\n * @summary qualifier\n * @description Blend the colors horizontally.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction horizontal() {\n    return new GradientDirectionQualifierValue('horizontal');\n}\n/**\n * @summary qualifier\n * @description Blend the colors vertically.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction vertical() {\n    return new GradientDirectionQualifierValue('vertical');\n}\n/**\n * @summary qualifier\n * @description Blend the colors diagonally from top-left to bottom-right.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction diagonalDesc() {\n    return new GradientDirectionQualifierValue('diagonal_desc');\n}\n/**\n * @summary qualifier\n * @description Blend the colors diagonally from bottom-left to top-right.\n * @memberOf Qualifiers.GradientDirection\n * @return {Qualifiers.GradientDirection.GradientDirectionQualifierValue}\n */\nfunction diagonalAsc() {\n    return new GradientDirectionQualifierValue('diagonal_asc');\n}\nconst GradientDirection = {\n    horizontal,\n    vertical,\n    diagonalDesc,\n    diagonalAsc\n};\nexport { horizontal, vertical, diagonalDesc, diagonalAsc, GradientDirection };\n", "import { FormatQualifier } from \"./format/FormatQualifier.js\";\n/**\n * @description Contains functions to select the asset format, can be used to convert images and videos to other formats.\n * @memberOf Qualifiers\n * @namespace Format\n * @see Visit {@link Actions.Delivery.format|Delivery Format} for an example\n */\n/**\n * @summary qualifier\n * @description Image format heic.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction heic() { return new FormatQualifier('heic'); }\n/**\n * @summary qualifier\n * @description Image format flif.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction flif() { return new FormatQualifier('flif'); }\n/**\n * @summary qualifier\n * @description Image format ai.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction ai() { return new FormatQualifier('ai'); }\n/**\n * @summary qualifier\n * @description Image format wdp.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction wdp() { return new FormatQualifier('wdp'); }\n/**\n * @summary qualifier\n * @description Image format svg.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction svg() { return new FormatQualifier('svg'); }\n/**\n * @summary qualifier\n * @description Image format webp.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction webp() { return new FormatQualifier('webp'); }\n/**\n * @summary qualifier\n * @description Image format psd.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction psd() { return new FormatQualifier('psd'); }\n/**\n * @summary qualifier\n * @description Image format jp2.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction jp2() { return new FormatQualifier('jp2'); }\n/**\n * @summary qualifier\n * @description Image format jpc.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction jpc() { return new FormatQualifier('jpc'); }\n/**\n * @summary qualifier\n * @description Image format eps.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction eps() { return new FormatQualifier('eps'); }\n/**\n * @summary qualifier\n * @description Image format tiff.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction tiff() { return new FormatQualifier('tiff'); }\n/**\n * @summary qualifier\n * @description Image format pdf.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction pdf() { return new FormatQualifier('pdf'); }\n/**\n * @summary qualifier\n * @description Image format ico.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction ico() { return new FormatQualifier('ico'); }\n/**\n * @summary qualifier\n * @description Image format bmp.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction bmp() { return new FormatQualifier('bmp'); }\n/**\n * @summary qualifier\n * @description Image format png.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction png() { return new FormatQualifier('png'); }\n/**\n * @summary qualifier\n * @description Image format gif.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction gif() { return new FormatQualifier('gif'); }\n/**\n * @summary qualifier\n * @description Image format auto.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction auto() { return new FormatQualifier('auto'); }\n/**\n * @summary qualifier\n * @description Image format jpg.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction jpg() { return new FormatQualifier('jpg'); }\n/**\n * @summary qualifier\n * @description Image format djvu.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction djvu() { return new FormatQualifier('djvu'); }\n/**\n * @summary qualifier\n * @description Image format ps.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction ps() { return new FormatQualifier('ps'); }\n/**\n * @summary qualifier\n * @description Image format ept.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction ept() { return new FormatQualifier('ept'); }\n/**\n * @summary qualifier\n * @description Image format eps3.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction eps3() { return new FormatQualifier('eps3'); }\n/**\n * @summary qualifier\n * @description Image format fxb.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction fxb() { return new FormatQualifier('fxb'); }\n/**\n * @summary qualifier\n * @description Image format gltf.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction gltf() { return new FormatQualifier('gltf'); }\n/**\n * @summary qualifier\n * @description Image format heif.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction heif() { return new FormatQualifier('heif'); }\n/**\n * @summary qualifier\n * @description Image format indd.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction indd() { return new FormatQualifier('indd'); }\n/**\n * @summary qualifier\n * @description Image format jpe.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction jpe() { return new FormatQualifier('jpe'); }\n/**\n * @summary qualifier\n * @description Image format jpeg.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction jpeg() { return new FormatQualifier('jpeg'); }\n/**\n * @summary qualifier\n * @description Image format jxr.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction jxr() { return new FormatQualifier('jxr'); }\n/**\n * @summary qualifier\n * @description Image format hdp.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction hdp() { return new FormatQualifier('hdp'); }\n/**\n * @summary qualifier\n * @description Image format spd.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction spd() { return new FormatQualifier('spd'); }\n/**\n * @summary qualifier\n * @description Image format arw.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction arw() { return new FormatQualifier('arw'); }\n/**\n * @summary qualifier\n * @description Image format cr2.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction cr2() { return new FormatQualifier('cr2'); }\n/**\n * @summary qualifier\n * @description Image format tga.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction tga() { return new FormatQualifier('tga'); }\n/**\n * @summary qualifier\n * @description Image format tif.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction tif() { return new FormatQualifier('tif'); }\n/**\n * @summary qualifier\n * @description Image format avif.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction avif() { return new FormatQualifier('avif'); }\n/**\n * @summary qualifier\n * @description format usdz.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction usdz() { return new FormatQualifier('usdz'); }\n/**\n * @summary qualifier\n * @description Image format 3g2.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction video3g2() { return new FormatQualifier('3g2'); }\n/**\n * @summary qualifier\n * @description Image format 3gp.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction video3gp() { return new FormatQualifier('3gp'); }\n/**\n * @summary qualifier\n * @description Image format avi.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoAvi() { return new FormatQualifier('avi'); }\n/**\n * @summary qualifier\n * @description Image format flv.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoFlv() { return new FormatQualifier('flv'); }\n/**\n * @summary qualifier\n * @description Image format m3u8.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoM3u8() { return new FormatQualifier('m3u8'); }\n/**\n * @summary qualifier\n * @description Image format ts.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoTs() { return new FormatQualifier('ts'); }\n/**\n * @summary qualifier\n * @description Image format mov.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMov() { return new FormatQualifier('mov'); }\n/**\n * @summary qualifier\n * @description Image format mkv.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMkv() { return new FormatQualifier('mkv'); }\n/**\n * @summary qualifier\n * @description Image format mp4.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMp4() { return new FormatQualifier('mp4'); }\n/**\n * @summary qualifier\n * @description Image format mpeg.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMpeg() { return new FormatQualifier('mpeg'); }\n/**\n * @summary qualifier\n * @description Image format mpd.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMpd() { return new FormatQualifier('mpd'); }\n/**\n * @summary qualifier\n * @description Image format mxf.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMxf() { return new FormatQualifier('mxf'); }\n/**\n * @summary qualifier\n * @description Image format ogv.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoOgv() { return new FormatQualifier('ogv'); }\n/**\n * @summary qualifier\n * @description Image format webm.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoWebm() { return new FormatQualifier('webm'); }\n/**\n * @summary qualifier\n * @description Image format wmv.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoWmv() { return new FormatQualifier('wmv'); }\n/**\n * @summary qualifier\n * @description Image format m2ts.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoM2ts() { return new FormatQualifier('m2ts'); }\n/**\n * @summary qualifier\n * @description Image format mts.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction videoMts() { return new FormatQualifier('mts'); }\n/**\n * @summary qualifier\n * @description Audio format aac.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioAac() { return new FormatQualifier('aac'); }\n/**\n * @summary qualifier\n * @description Audio format aiff.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioAiff() { return new FormatQualifier('aiff'); }\n/**\n * @summary qualifier\n * @description Audio format amr.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioAmr() { return new FormatQualifier('amr'); }\n/**\n * @summary qualifier\n * @description Audio format flac.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioFlac() { return new FormatQualifier('flac'); }\n/**\n * @summary qualifier\n * @description Audio format m4a.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioM4a() { return new FormatQualifier('m4a'); }\n/**\n * @summary qualifier\n * @description Audio format mp3.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioMp3() { return new FormatQualifier('mp3'); }\n/**\n * @summary qualifier\n * @description Audio format ogg.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioOgg() { return new FormatQualifier('ogg'); }\n/**\n * @summary qualifier\n * @description Audio format opus.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioOpus() { return new FormatQualifier('opus'); }\n/**\n * @summary qualifier\n * @description Audio format wav.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction audioWav() { return new FormatQualifier('wav'); }\n/**\n * @summary qualifier\n * @description Image format glb.\n * @memberOf Qualifiers.Format\n * @return {Qualifiers.Format.FormatQualifier}\n */\nfunction glb() { return new FormatQualifier('glb'); }\nconst Format = { usdz, jp2, ai, auto, bmp, eps, flif, gif, heic, ico, jpc, jpg, pdf, png, psd, svg, tiff, wdp, webp, arw, audioAac, audioAiff, audioAmr, audioFlac, audioM4a, audioMp3, audioOgg, audioOpus, audioWav, avif, cr2, djvu, eps3, ept, fxb, gltf, hdp, heif, indd, jpe, jpeg, jxr, ps, spd, tga, tif, video3g2, video3gp, videoAvi, videoFlv, videoM2ts, videoM3u8, videoMkv, videoMov, videoMp4, videoMpd, videoMpeg, videoMts, videoMxf, videoOgv, videoTs, videoWebm, videoWmv, glb };\nexport { usdz, jp2, ai, auto, bmp, eps, flif, gif, heic, ico, jpc, jpg, pdf, png, psd, svg, tiff, wdp, webp, arw, audioAac, audioAiff, audioAmr, audioFlac, audioM4a, audioMp3, audioOgg, audioOpus, audioWav, avif, cr2, djvu, eps3, ept, fxb, gltf, hdp, heif, indd, jpe, jpeg, jxr, ps, spd, tga, tif, video3g2, video3gp, videoAvi, videoFlv, videoM2ts, videoM3u8, videoMkv, videoMov, videoMp4, videoMpd, videoMpeg, videoMts, videoMxf, videoOgv, videoTs, videoWebm, videoWmv, glb, Format };\n", "/**\n * @description Contains functions to select the font hinting setting.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/layers#text_layer_options|Adding text overlays to images}\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_layers#text_layer_options|Adding text overlays to videos}\n * @memberOf Qualifiers\n * @namespace FontHinting\n * @see To be used with {@link Qualifiers.TextStyle|Text Style}\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FontHinting\n */\nfunction none() {\n    return '';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FontHinting\n */\nfunction slight() {\n    return 'slight';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FontHinting\n */\nfunction medium() {\n    return 'medium';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FontHinting\n */\nfunction full() {\n    return 'full';\n}\nconst FontHinting = { full, none, medium, slight };\nexport { FontHinting, full, none, medium, slight };\n", "import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @namespace Expression\n * @memberOf Qualifiers.Expression\n * @extends {SDK.QualifierValue}\n */\nclass ExpressionQualifier extends QualifierValue {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n}\nexport { ExpressionQualifier };\n", "import { CONDITIONAL_OPERATORS, RESERVED_NAMES } from \"../internal/internalConstants.js\";\nimport { ExpressionQualifier } from \"./expression/ExpressionQualifier.js\";\n/**\n * @description\n * Used for variable or conditional expressions\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/user_defined_variables#arithmetic_expressions|Arithmetic expressions }\n * @namespace Expression\n * @memberOf Qualifiers\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Expression\n * @return {Qualifiers.Expression.ExpressionQualifier}\n */\nfunction expression(exp) {\n    // Prepare the CONDITIONAL_OPERATORS object to be used in a regex\n    // Properly escape |, +, ^ and *\n    // This step also adds a regex space ( \\s ) around each operator, since these are only replaced when wrapped with spaces\n    // $foo * $bar is replaced to $foo_mul_$bar\n    // $foo*bar is treated AS-IS.\n    const reservedOperatorList = Object.keys(CONDITIONAL_OPERATORS).map((key) => {\n        return `\\\\s${key.replace(/(\\*|\\+|\\^|\\|)/g, '\\\\$1')}\\\\s`;\n    });\n    // reservedOperatorList is now an array of values, joining with | creates the regex list\n    const regexSafeOperatorList = reservedOperatorList.join('|');\n    const operatorsReplaceRE = new RegExp(`(${regexSafeOperatorList})`, \"g\");\n    // First, we replace all the operators\n    // Notice how we pad the matched operators with `_`, this is following the step above.\n    // This turns $foo * $bar into $foo_mul_$bar (notice how the spaces were replaced with an underscore\n    const stringWithOperators = exp.toString()\n        .replace(operatorsReplaceRE, (match) => {\n        // match contains spaces around the expression, we need to trim it as the original list\n        // does not contain spaces.\n        return `_${CONDITIONAL_OPERATORS[match.trim()]}_`;\n    });\n    // Handle reserved names (width, height, etc.)\n    const ReservedNames = Object.keys(RESERVED_NAMES);\n    const regexSafeReservedNameList = ReservedNames.join('|');\n    // Gather all statements that begin with a dollar sign, underscore or a space\n    // Gather all RESERVED NAMES\n    // $foo_bar is matched\n    // height is matched\n    const reservedNamesRE = new RegExp(`(\\\\$_*[^_ ]+)|${regexSafeReservedNameList}`, \"g\");\n    // Since this regex captures both user variables and our reserved keywords, we need to add some logic in the replacer\n    const stringWithVariables = stringWithOperators.replace(reservedNamesRE, (match) => {\n        // Do not do anything to user variables (anything starting with $)\n        if (match.startsWith('$')) {\n            return match;\n        }\n        else {\n            return RESERVED_NAMES[match] || match;\n        }\n    });\n    // Serialize remaining spaces with an underscore\n    const finalExpressionString = stringWithVariables.replace(/\\s/g, '_');\n    return new ExpressionQualifier(finalExpressionString);\n}\n// as a namespace\nconst Expression = {\n    expression\n};\nexport { Expression, expression };\n", "/**\n * @description Qualifiers for applying an ordered dither filter to the image.\n * @namespace Dither\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Effect.dither|Dither Effect} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction threshold1x1Nondither() {\n    return 0;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction checkerboard2x1Dither() {\n    return 1;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction ordered2x2Dispersed() {\n    return 2;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction ordered3x3Dispersed() {\n    return 3;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction ordered4x4Dispersed() {\n    return 4;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction ordered8x8Dispersed() {\n    return 5;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone4x4Angled() {\n    return 6;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone6x6Angled() {\n    return 7;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone8x8Angled() {\n    return 8;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone4x4Orthogonal() {\n    return 9;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone6x6Orthogonal() {\n    return 10;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone8x8Orthogonal() {\n    return 11;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction halftone16x16Orthogonal() {\n    return 12;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction circles5x5Black() {\n    return 13;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction circles5x5White() {\n    return 14;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction circles6x6Black() {\n    return 15;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction circles6x6White() {\n    return 16;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction circles7x7Black() {\n    return 17;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Dither\n */\nfunction circles7x7White() {\n    return 18;\n}\nconst Dither = {\n    checkerboard2x1Dither,\n    circles5x5Black,\n    circles5x5White,\n    circles6x6Black,\n    circles6x6White,\n    circles7x7Black,\n    circles7x7White,\n    halftone4x4Angled,\n    halftone4x4Orthogonal,\n    halftone6x6Angled,\n    halftone6x6Orthogonal,\n    halftone8x8Angled,\n    halftone8x8Orthogonal,\n    halftone16x16Orthogonal,\n    ordered2x2Dispersed,\n    ordered3x3Dispersed,\n    ordered4x4Dispersed,\n    ordered8x8Dispersed,\n    threshold1x1Nondither\n};\nexport { Dither, checkerboard2x1Dither, circles5x5Black, circles5x5White, circles6x6Black, circles6x6White, circles7x7Black, circles7x7White, halftone4x4Angled, halftone4x4Orthogonal, halftone6x6Angled, halftone6x6Orthogonal, halftone8x8Angled, halftone8x8Orthogonal, halftone16x16Orthogonal, ordered2x2Dispersed, ordered3x3Dispersed, ordered4x4Dispersed, ordered8x8Dispersed, threshold1x1Nondither };\n", "/**\n * @description Contains functions to select the color space mode.\n * @namespace ColorSpace\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Delivery.colorSpace|Delivery Color Space} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ColorSpace\n */\nfunction srgb() {\n    return 'srgb';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ColorSpace\n */\nfunction trueColor() {\n    return 'srgb:truecolor';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ColorSpace\n */\nfunction tinySrgb() {\n    return 'tinysrgb';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ColorSpace\n */\nfunction cmyk() {\n    return 'cmyk';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ColorSpace\n */\nfunction noCmyk() {\n    return 'no_cmyk';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ColorSpace\n */\nfunction keepCmyk() {\n    return 'keep_cmyk';\n}\nconst ColorSpace = {\n    cmyk,\n    keepCmyk,\n    noCmyk,\n    srgb,\n    tinySrgb,\n    trueColor\n};\nexport { ColorSpace, cmyk, keepCmyk, noCmyk, srgb, tinySrgb, trueColor };\n", "/**\n * @memberOf Qualifiers\n * @description This namespace contains all the colors used in the SDK\n * @namespace Color\n * @example\n * // Reference only, do NOT use within your code for tree-shaking reasons\n * // SDK functions that require color accept a string (like 'red') or a hex value, like 'ffffff'\n * import {Color} from '@cloudinary/url-gen/qualifiers/color'\n * console.log(Color.RED);\n */\nconst Color = {\n    SNOW: 'snow',\n    SNOW1: 'snow1',\n    SNOW2: 'snow2',\n    ROSYBROWN1: 'rosybrown1',\n    ROSYBROWN2: 'rosybrown2',\n    SNOW3: 'snow3',\n    LIGHTCORAL: 'lightcoral',\n    INDIANRED1: 'indianred1',\n    ROSYBROWN3: 'rosybrown3',\n    INDIANRED2: 'indianred2',\n    ROSYBROWN: 'rosybrown',\n    BROWN1: 'brown1',\n    FIREBRICK1: 'firebrick1',\n    BROWN2: 'brown2',\n    INDIANRED: 'indianred',\n    INDIANRED3: 'indianred3',\n    FIREBRICK2: 'firebrick2',\n    SNOW4: 'snow4',\n    BROWN3: 'brown3',\n    RED: 'red',\n    RED1: 'red1',\n    ROSYBROWN4: 'rosybrown4',\n    FIREBRICK3: 'firebrick3',\n    RED2: 'red2',\n    FIREBRICK: 'firebrick',\n    BROWN: 'brown',\n    RED3: 'red3',\n    INDIANRED4: 'indianred4',\n    BROWN4: 'brown4',\n    FIREBRICK4: 'firebrick4',\n    DARKRED: 'darkred',\n    RED4: 'red4',\n    LIGHTPINK1: 'lightpink1',\n    LIGHTPINK3: 'lightpink3',\n    LIGHTPINK4: 'lightpink4',\n    LIGHTPINK2: 'lightpink2',\n    LIGHTPINK: 'lightpink',\n    PINK: 'pink',\n    CRIMSON: 'crimson',\n    PINK1: 'pink1',\n    PINK2: 'pink2',\n    PINK3: 'pink3',\n    PINK4: 'pink4',\n    PALEVIOLETRED4: 'palevioletred4',\n    PALEVIOLETRED: 'palevioletred',\n    PALEVIOLETRED2: 'palevioletred2',\n    PALEVIOLETRED1: 'palevioletred1',\n    PALEVIOLETRED3: 'palevioletred3',\n    LAVENDERBLUSH: 'lavenderblush',\n    LAVENDERBLUSH1: 'lavenderblush1',\n    LAVENDERBLUSH3: 'lavenderblush3',\n    LAVENDERBLUSH2: 'lavenderblush2',\n    LAVENDERBLUSH4: 'lavenderblush4',\n    MAROON: 'maroon',\n    HOTPINK3: 'hotpink3',\n    VIOLETRED3: 'violetred3',\n    VIOLETRED1: 'violetred1',\n    VIOLETRED2: 'violetred2',\n    VIOLETRED4: 'violetred4',\n    HOTPINK2: 'hotpink2',\n    HOTPINK1: 'hotpink1',\n    HOTPINK4: 'hotpink4',\n    HOTPINK: 'hotpink',\n    DEEPPINK: 'deeppink',\n    DEEPPINK1: 'deeppink1',\n    DEEPPINK2: 'deeppink2',\n    DEEPPINK3: 'deeppink3',\n    DEEPPINK4: 'deeppink4',\n    MAROON1: 'maroon1',\n    MAROON2: 'maroon2',\n    MAROON3: 'maroon3',\n    MAROON4: 'maroon4',\n    MEDIUMVIOLETRED: 'mediumvioletred',\n    VIOLETRED: 'violetred',\n    ORCHID2: 'orchid2',\n    ORCHID: 'orchid',\n    ORCHID1: 'orchid1',\n    ORCHID3: 'orchid3',\n    ORCHID4: 'orchid4',\n    THISTLE1: 'thistle1',\n    THISTLE2: 'thistle2',\n    PLUM1: 'plum1',\n    PLUM2: 'plum2',\n    THISTLE: 'thistle',\n    THISTLE3: 'thistle3',\n    PLUM: 'plum',\n    VIOLET: 'violet',\n    PLUM3: 'plum3',\n    THISTLE4: 'thistle4',\n    FUCHSIA: 'fuchsia',\n    MAGENTA: 'magenta',\n    MAGENTA1: 'magenta1',\n    PLUM4: 'plum4',\n    MAGENTA2: 'magenta2',\n    MAGENTA3: 'magenta3',\n    DARKMAGENTA: 'darkmagenta',\n    MAGENTA4: 'magenta4',\n    PURPLE: 'purple',\n    MEDIUMORCHID: 'mediumorchid',\n    MEDIUMORCHID1: 'mediumorchid1',\n    MEDIUMORCHID2: 'mediumorchid2',\n    MEDIUMORCHID3: 'mediumorchid3',\n    MEDIUMORCHID4: 'mediumorchid4',\n    DARKVIOLET: 'darkviolet',\n    DARKORCHID: 'darkorchid',\n    DARKORCHID1: 'darkorchid1',\n    DARKORCHID3: 'darkorchid3',\n    DARKORCHID2: 'darkorchid2',\n    DARKORCHID4: 'darkorchid4',\n    INDIGO: 'indigo',\n    BLUEVIOLET: 'blueviolet',\n    PURPLE2: 'purple2',\n    PURPLE3: 'purple3',\n    PURPLE4: 'purple4',\n    PURPLE1: 'purple1',\n    MEDIUMPURPLE: 'mediumpurple',\n    MEDIUMPURPLE1: 'mediumpurple1',\n    MEDIUMPURPLE2: 'mediumpurple2',\n    MEDIUMPURPLE3: 'mediumpurple3',\n    MEDIUMPURPLE4: 'mediumpurple4',\n    DARKSLATEBLUE: 'darkslateblue',\n    LIGHTSLATEBLUE: 'lightslateblue',\n    MEDIUMSLATEBLUE: 'mediumslateblue',\n    SLATEBLUE: 'slateblue',\n    SLATEBLUE1: 'slateblue1',\n    SLATEBLUE2: 'slateblue2',\n    SLATEBLUE3: 'slateblue3',\n    SLATEBLUE4: 'slateblue4',\n    GHOSTWHITE: 'ghostwhite',\n    LAVENDER: 'lavender',\n    BLUE: 'blue',\n    BLUE1: 'blue1',\n    BLUE2: 'blue2',\n    BLUE3: 'blue3',\n    MEDIUMBLUE: 'mediumblue',\n    BLUE4: 'blue4',\n    DARKBLUE: 'darkblue',\n    MIDNIGHTBLUE: 'midnightblue',\n    NAVY: 'navy',\n    NAVYBLUE: 'navyblue',\n    ROYALBLUE: 'royalblue',\n    ROYALBLUE1: 'royalblue1',\n    ROYALBLUE2: 'royalblue2',\n    ROYALBLUE3: 'royalblue3',\n    ROYALBLUE4: 'royalblue4',\n    CORNFLOWERBLUE: 'cornflowerblue',\n    LIGHTSTEELBLUE: 'lightsteelblue',\n    LIGHTSTEELBLUE1: 'lightsteelblue1',\n    LIGHTSTEELBLUE2: 'lightsteelblue2',\n    LIGHTSTEELBLUE3: 'lightsteelblue3',\n    LIGHTSTEELBLUE4: 'lightsteelblue4',\n    SLATEGRAY4: 'slategray4',\n    SLATEGRAY1: 'slategray1',\n    SLATEGRAY2: 'slategray2',\n    SLATEGRAY3: 'slategray3',\n    LIGHTSLATEGRAY: 'lightslategray',\n    LIGHTSLATEGREY: 'lightslategrey',\n    SLATEGRAY: 'slategray',\n    SLATEGREY: 'slategrey',\n    DODGERBLUE: 'dodgerblue',\n    DODGERBLUE1: 'dodgerblue1',\n    DODGERBLUE2: 'dodgerblue2',\n    DODGERBLUE4: 'dodgerblue4',\n    DODGERBLUE3: 'dodgerblue3',\n    ALICEBLUE: 'aliceblue',\n    STEELBLUE4: 'steelblue4',\n    STEELBLUE: 'steelblue',\n    STEELBLUE1: 'steelblue1',\n    STEELBLUE2: 'steelblue2',\n    STEELBLUE3: 'steelblue3',\n    SKYBLUE4: 'skyblue4',\n    SKYBLUE1: 'skyblue1',\n    SKYBLUE2: 'skyblue2',\n    SKYBLUE3: 'skyblue3',\n    LIGHTSKYBLUE: 'lightskyblue',\n    LIGHTSKYBLUE4: 'lightskyblue4',\n    LIGHTSKYBLUE1: 'lightskyblue1',\n    LIGHTSKYBLUE2: 'lightskyblue2',\n    LIGHTSKYBLUE3: 'lightskyblue3',\n    SKYBLUE: 'skyblue',\n    LIGHTBLUE3: 'lightblue3',\n    DEEPSKYBLUE: 'deepskyblue',\n    DEEPSKYBLUE1: 'deepskyblue1',\n    DEEPSKYBLUE2: 'deepskyblue2',\n    DEEPSKYBLUE4: 'deepskyblue4',\n    DEEPSKYBLUE3: 'deepskyblue3',\n    LIGHTBLUE1: 'lightblue1',\n    LIGHTBLUE2: 'lightblue2',\n    LIGHTBLUE: 'lightblue',\n    LIGHTBLUE4: 'lightblue4',\n    POWDERBLUE: 'powderblue',\n    CADETBLUE1: 'cadetblue1',\n    CADETBLUE2: 'cadetblue2',\n    CADETBLUE3: 'cadetblue3',\n    CADETBLUE4: 'cadetblue4',\n    TURQUOISE1: 'turquoise1',\n    TURQUOISE2: 'turquoise2',\n    TURQUOISE3: 'turquoise3',\n    TURQUOISE4: 'turquoise4',\n    CADETBLUE: 'cadetblue',\n    DARKTURQUOISE: 'darkturquoise',\n    AZURE: 'azure',\n    AZURE1: 'azure1',\n    LIGHTCYAN1: 'lightcyan1',\n    LIGHTCYAN: 'lightcyan',\n    AZURE2: 'azure2',\n    LIGHTCYAN2: 'lightcyan2',\n    PALETURQUOISE1: 'paleturquoise1',\n    PALETURQUOISE: 'paleturquoise',\n    PALETURQUOISE2: 'paleturquoise2',\n    DARKSLATEGRAY1: 'darkslategray1',\n    AZURE3: 'azure3',\n    LIGHTCYAN3: 'lightcyan3',\n    DARKSLATEGRAY2: 'darkslategray2',\n    PALETURQUOISE3: 'paleturquoise3',\n    DARKSLATEGRAY3: 'darkslategray3',\n    AZURE4: 'azure4',\n    LIGHTCYAN4: 'lightcyan4',\n    AQUA: 'aqua',\n    CYAN: 'cyan',\n    CYAN1: 'cyan1',\n    PALETURQUOISE4: 'paleturquoise4',\n    CYAN2: 'cyan2',\n    DARKSLATEGRAY4: 'darkslategray4',\n    CYAN3: 'cyan3',\n    CYAN4: 'cyan4',\n    DARKCYAN: 'darkcyan',\n    TEAL: 'teal',\n    DARKSLATEGRAY: 'darkslategray',\n    DARKSLATEGREY: 'darkslategrey',\n    MEDIUMTURQUOISE: 'mediumturquoise',\n    LIGHTSEAGREEN: 'lightseagreen',\n    TURQUOISE: 'turquoise',\n    AQUAMARINE4: 'aquamarine4',\n    AQUAMARINE: 'aquamarine',\n    AQUAMARINE1: 'aquamarine1',\n    AQUAMARINE2: 'aquamarine2',\n    AQUAMARINE3: 'aquamarine3',\n    MEDIUMAQUAMARINE: 'mediumaquamarine',\n    MEDIUMSPRINGGREEN: 'mediumspringgreen',\n    MINTCREAM: 'mintcream',\n    SPRINGGREEN: 'springgreen',\n    SPRINGGREEN1: 'springgreen1',\n    SPRINGGREEN2: 'springgreen2',\n    SPRINGGREEN3: 'springgreen3',\n    SPRINGGREEN4: 'springgreen4',\n    MEDIUMSEAGREEN: 'mediumseagreen',\n    SEAGREEN: 'seagreen',\n    SEAGREEN3: 'seagreen3',\n    SEAGREEN1: 'seagreen1',\n    SEAGREEN4: 'seagreen4',\n    SEAGREEN2: 'seagreen2',\n    MEDIUMFORESTGREEN: 'mediumforestgreen',\n    HONEYDEW: 'honeydew',\n    HONEYDEW1: 'honeydew1',\n    HONEYDEW2: 'honeydew2',\n    DARKSEAGREEN1: 'darkseagreen1',\n    DARKSEAGREEN2: 'darkseagreen2',\n    PALEGREEN1: 'palegreen1',\n    PALEGREEN: 'palegreen',\n    HONEYDEW3: 'honeydew3',\n    LIGHTGREEN: 'lightgreen',\n    PALEGREEN2: 'palegreen2',\n    DARKSEAGREEN3: 'darkseagreen3',\n    DARKSEAGREEN: 'darkseagreen',\n    PALEGREEN3: 'palegreen3',\n    HONEYDEW4: 'honeydew4',\n    GREEN1: 'green1',\n    LIME: 'lime',\n    LIMEGREEN: 'limegreen',\n    DARKSEAGREEN4: 'darkseagreen4',\n    GREEN2: 'green2',\n    PALEGREEN4: 'palegreen4',\n    GREEN3: 'green3',\n    FORESTGREEN: 'forestgreen',\n    GREEN4: 'green4',\n    GREEN: 'green',\n    DARKGREEN: 'darkgreen',\n    LAWNGREEN: 'lawngreen',\n    CHARTREUSE: 'chartreuse',\n    CHARTREUSE1: 'chartreuse1',\n    CHARTREUSE2: 'chartreuse2',\n    CHARTREUSE3: 'chartreuse3',\n    CHARTREUSE4: 'chartreuse4',\n    GREENYELLOW: 'greenyellow',\n    DARKOLIVEGREEN3: 'darkolivegreen3',\n    DARKOLIVEGREEN1: 'darkolivegreen1',\n    DARKOLIVEGREEN2: 'darkolivegreen2',\n    DARKOLIVEGREEN4: 'darkolivegreen4',\n    DARKOLIVEGREEN: 'darkolivegreen',\n    OLIVEDRAB: 'olivedrab',\n    OLIVEDRAB1: 'olivedrab1',\n    OLIVEDRAB2: 'olivedrab2',\n    OLIVEDRAB3: 'olivedrab3',\n    YELLOWGREEN: 'yellowgreen',\n    OLIVEDRAB4: 'olivedrab4',\n    IVORY: 'ivory',\n    IVORY1: 'ivory1',\n    LIGHTYELLOW: 'lightyellow',\n    LIGHTYELLOW1: 'lightyellow1',\n    BEIGE: 'beige',\n    IVORY2: 'ivory2',\n    LIGHTGOLDENRODYELLOW: 'lightgoldenrodyellow',\n    LIGHTYELLOW2: 'lightyellow2',\n    IVORY3: 'ivory3',\n    LIGHTYELLOW3: 'lightyellow3',\n    IVORY4: 'ivory4',\n    LIGHTYELLOW4: 'lightyellow4',\n    YELLOW: 'yellow',\n    YELLOW1: 'yellow1',\n    YELLOW2: 'yellow2',\n    YELLOW3: 'yellow3',\n    YELLOW4: 'yellow4',\n    OLIVE: 'olive',\n    DARKKHAKI: 'darkkhaki',\n    KHAKI2: 'khaki2',\n    LEMONCHIFFON4: 'lemonchiffon4',\n    KHAKI1: 'khaki1',\n    KHAKI3: 'khaki3',\n    KHAKI4: 'khaki4',\n    PALEGOLDENROD: 'palegoldenrod',\n    LEMONCHIFFON: 'lemonchiffon',\n    LEMONCHIFFON1: 'lemonchiffon1',\n    KHAKI: 'khaki',\n    LEMONCHIFFON3: 'lemonchiffon3',\n    LEMONCHIFFON2: 'lemonchiffon2',\n    MEDIUMGOLDENROD: 'mediumgoldenrod',\n    CORNSILK4: 'cornsilk4',\n    GOLD: 'gold',\n    GOLD1: 'gold1',\n    GOLD2: 'gold2',\n    GOLD3: 'gold3',\n    GOLD4: 'gold4',\n    LIGHTGOLDENROD: 'lightgoldenrod',\n    LIGHTGOLDENROD4: 'lightgoldenrod4',\n    LIGHTGOLDENROD1: 'lightgoldenrod1',\n    LIGHTGOLDENROD3: 'lightgoldenrod3',\n    LIGHTGOLDENROD2: 'lightgoldenrod2',\n    CORNSILK3: 'cornsilk3',\n    CORNSILK2: 'cornsilk2',\n    CORNSILK: 'cornsilk',\n    CORNSILK1: 'cornsilk1',\n    GOLDENROD: 'goldenrod',\n    GOLDENROD1: 'goldenrod1',\n    GOLDENROD2: 'goldenrod2',\n    GOLDENROD3: 'goldenrod3',\n    GOLDENROD4: 'goldenrod4',\n    DARKGOLDENROD: 'darkgoldenrod',\n    DARKGOLDENROD1: 'darkgoldenrod1',\n    DARKGOLDENROD2: 'darkgoldenrod2',\n    DARKGOLDENROD3: 'darkgoldenrod3',\n    DARKGOLDENROD4: 'darkgoldenrod4',\n    FLORALWHITE: 'floralwhite',\n    WHEAT2: 'wheat2',\n    OLDLACE: 'oldlace',\n    WHEAT: 'wheat',\n    WHEAT1: 'wheat1',\n    WHEAT3: 'wheat3',\n    ORANGE: 'orange',\n    ORANGE1: 'orange1',\n    ORANGE2: 'orange2',\n    ORANGE3: 'orange3',\n    ORANGE4: 'orange4',\n    WHEAT4: 'wheat4',\n    MOCCASIN: 'moccasin',\n    PAPAYAWHIP: 'papayawhip',\n    NAVAJOWHITE3: 'navajowhite3',\n    BLANCHEDALMOND: 'blanchedalmond',\n    NAVAJOWHITE: 'navajowhite',\n    NAVAJOWHITE1: 'navajowhite1',\n    NAVAJOWHITE2: 'navajowhite2',\n    NAVAJOWHITE4: 'navajowhite4',\n    ANTIQUEWHITE4: 'antiquewhite4',\n    ANTIQUEWHITE: 'antiquewhite',\n    TAN: 'tan',\n    BISQUE4: 'bisque4',\n    BURLYWOOD: 'burlywood',\n    ANTIQUEWHITE2: 'antiquewhite2',\n    BURLYWOOD1: 'burlywood1',\n    BURLYWOOD3: 'burlywood3',\n    BURLYWOOD2: 'burlywood2',\n    ANTIQUEWHITE1: 'antiquewhite1',\n    BURLYWOOD4: 'burlywood4',\n    ANTIQUEWHITE3: 'antiquewhite3',\n    DARKORANGE: 'darkorange',\n    BISQUE2: 'bisque2',\n    BISQUE: 'bisque',\n    BISQUE1: 'bisque1',\n    BISQUE3: 'bisque3',\n    DARKORANGE1: 'darkorange1',\n    LINEN: 'linen',\n    DARKORANGE2: 'darkorange2',\n    DARKORANGE3: 'darkorange3',\n    DARKORANGE4: 'darkorange4',\n    PERU: 'peru',\n    TAN1: 'tan1',\n    TAN2: 'tan2',\n    TAN3: 'tan3',\n    TAN4: 'tan4',\n    PEACHPUFF: 'peachpuff',\n    PEACHPUFF1: 'peachpuff1',\n    PEACHPUFF4: 'peachpuff4',\n    PEACHPUFF2: 'peachpuff2',\n    PEACHPUFF3: 'peachpuff3',\n    SANDYBROWN: 'sandybrown',\n    SEASHELL4: 'seashell4',\n    SEASHELL2: 'seashell2',\n    SEASHELL3: 'seashell3',\n    CHOCOLATE: 'chocolate',\n    CHOCOLATE1: 'chocolate1',\n    CHOCOLATE2: 'chocolate2',\n    CHOCOLATE3: 'chocolate3',\n    CHOCOLATE4: 'chocolate4',\n    SADDLEBROWN: 'saddlebrown',\n    SEASHELL: 'seashell',\n    SEASHELL1: 'seashell1',\n    SIENNA4: 'sienna4',\n    SIENNA: 'sienna',\n    SIENNA1: 'sienna1',\n    SIENNA2: 'sienna2',\n    SIENNA3: 'sienna3',\n    LIGHTSALMON3: 'lightsalmon3',\n    LIGHTSALMON: 'lightsalmon',\n    LIGHTSALMON1: 'lightsalmon1',\n    LIGHTSALMON4: 'lightsalmon4',\n    LIGHTSALMON2: 'lightsalmon2',\n    CORAL: 'coral',\n    ORANGERED: 'orangered',\n    ORANGERED1: 'orangered1',\n    ORANGERED2: 'orangered2',\n    ORANGERED3: 'orangered3',\n    ORANGERED4: 'orangered4',\n    DARKSALMON: 'darksalmon',\n    SALMON1: 'salmon1',\n    SALMON2: 'salmon2',\n    SALMON3: 'salmon3',\n    SALMON4: 'salmon4',\n    CORAL1: 'coral1',\n    CORAL2: 'coral2',\n    CORAL3: 'coral3',\n    CORAL4: 'coral4',\n    TOMATO4: 'tomato4',\n    TOMATO: 'tomato',\n    TOMATO1: 'tomato1',\n    TOMATO2: 'tomato2',\n    TOMATO3: 'tomato3',\n    MISTYROSE4: 'mistyrose4',\n    MISTYROSE2: 'mistyrose2',\n    MISTYROSE: 'mistyrose',\n    MISTYROSE1: 'mistyrose1',\n    SALMON: 'salmon',\n    MISTYROSE3: 'mistyrose3',\n    WHITE: 'white',\n    GRAY100: 'gray100',\n    GREY100: 'grey100',\n    GRAY99: 'gray99',\n    GREY99: 'grey99',\n    GRAY98: 'gray98',\n    GREY98: 'grey98',\n    GRAY97: 'gray97',\n    GREY97: 'grey97',\n    GRAY96: 'gray96',\n    GREY96: 'grey96',\n    WHITESMOKE: 'whitesmoke',\n    GRAY95: 'gray95',\n    GREY95: 'grey95',\n    GRAY94: 'gray94',\n    GREY94: 'grey94',\n    GRAY93: 'gray93',\n    GREY93: 'grey93',\n    GRAY92: 'gray92',\n    GREY92: 'grey92',\n    GRAY91: 'gray91',\n    GREY91: 'grey91',\n    GRAY90: 'gray90',\n    GREY90: 'grey90',\n    GRAY89: 'gray89',\n    GREY89: 'grey89',\n    GRAY88: 'gray88',\n    GREY88: 'grey88',\n    GRAY87: 'gray87',\n    GREY87: 'grey87',\n    GAINSBORO: 'gainsboro',\n    GRAY86: 'gray86',\n    GREY86: 'grey86',\n    GRAY85: 'gray85',\n    GREY85: 'grey85',\n    GRAY84: 'gray84',\n    GREY84: 'grey84',\n    GRAY83: 'gray83',\n    GREY83: 'grey83',\n    LIGHTGRAY: 'lightgray',\n    LIGHTGREY: 'lightgrey',\n    GRAY82: 'gray82',\n    GREY82: 'grey82',\n    GRAY81: 'gray81',\n    GREY81: 'grey81',\n    GRAY80: 'gray80',\n    GREY80: 'grey80',\n    GRAY79: 'gray79',\n    GREY79: 'grey79',\n    GRAY78: 'gray78',\n    GREY78: 'grey78',\n    GRAY77: 'gray77',\n    GREY77: 'grey77',\n    GRAY76: 'gray76',\n    GREY76: 'grey76',\n    SILVER: 'silver',\n    GRAY75: 'gray75',\n    GREY75: 'grey75',\n    GRAY74: 'gray74',\n    GREY74: 'grey74',\n    GRAY73: 'gray73',\n    GREY73: 'grey73',\n    GRAY72: 'gray72',\n    GREY72: 'grey72',\n    GRAY71: 'gray71',\n    GREY71: 'grey71',\n    GRAY70: 'gray70',\n    GREY70: 'grey70',\n    GRAY69: 'gray69',\n    GREY69: 'grey69',\n    GRAY68: 'gray68',\n    GREY68: 'grey68',\n    GRAY67: 'gray67',\n    GREY67: 'grey67',\n    DARKGRAY: 'darkgray',\n    DARKGREY: 'darkgrey',\n    GRAY66: 'gray66',\n    GREY66: 'grey66',\n    GRAY65: 'gray65',\n    GREY65: 'grey65',\n    GRAY64: 'gray64',\n    GREY64: 'grey64',\n    GRAY63: 'gray63',\n    GREY63: 'grey63',\n    GRAY62: 'gray62',\n    GREY62: 'grey62',\n    GRAY61: 'gray61',\n    GREY61: 'grey61',\n    GRAY60: 'gray60',\n    GREY60: 'grey60',\n    GRAY59: 'gray59',\n    GREY59: 'grey59',\n    GRAY58: 'gray58',\n    GREY58: 'grey58',\n    GRAY57: 'gray57',\n    GREY57: 'grey57',\n    GRAY56: 'gray56',\n    GREY56: 'grey56',\n    GRAY55: 'gray55',\n    GREY55: 'grey55',\n    GRAY54: 'gray54',\n    GREY54: 'grey54',\n    GRAY53: 'gray53',\n    GREY53: 'grey53',\n    GRAY52: 'gray52',\n    GREY52: 'grey52',\n    GRAY51: 'gray51',\n    GREY51: 'grey51',\n    FRACTAL: 'fractal',\n    GRAY50: 'gray50',\n    GREY50: 'grey50',\n    GRAY: 'gray',\n    GREY: 'grey',\n    GRAY49: 'gray49',\n    GREY49: 'grey49',\n    GRAY48: 'gray48',\n    GREY48: 'grey48',\n    GRAY47: 'gray47',\n    GREY47: 'grey47',\n    GRAY46: 'gray46',\n    GREY46: 'grey46',\n    GRAY45: 'gray45',\n    GREY45: 'grey45',\n    GRAY44: 'gray44',\n    GREY44: 'grey44',\n    GRAY43: 'gray43',\n    GREY43: 'grey43',\n    GRAY42: 'gray42',\n    GREY42: 'grey42',\n    DIMGRAY: 'dimgray',\n    DIMGREY: 'dimgrey',\n    GRAY41: 'gray41',\n    GREY41: 'grey41',\n    GRAY40: 'gray40',\n    GREY40: 'grey40',\n    GRAY39: 'gray39',\n    GREY39: 'grey39',\n    GRAY38: 'gray38',\n    GREY38: 'grey38',\n    GRAY37: 'gray37',\n    GREY37: 'grey37',\n    GRAY36: 'gray36',\n    GREY36: 'grey36',\n    GRAY35: 'gray35',\n    GREY35: 'grey35',\n    GRAY34: 'gray34',\n    GREY34: 'grey34',\n    GRAY33: 'gray33',\n    GREY33: 'grey33',\n    GRAY32: 'gray32',\n    GREY32: 'grey32',\n    GRAY31: 'gray31',\n    GREY31: 'grey31',\n    GRAY30: 'gray30',\n    GREY30: 'grey30',\n    GRAY29: 'gray29',\n    GREY29: 'grey29',\n    GRAY28: 'gray28',\n    GREY28: 'grey28',\n    GRAY27: 'gray27',\n    GREY27: 'grey27',\n    GRAY26: 'gray26',\n    GREY26: 'grey26',\n    GRAY25: 'gray25',\n    GREY25: 'grey25',\n    GRAY24: 'gray24',\n    GREY24: 'grey24',\n    GRAY23: 'gray23',\n    GREY23: 'grey23',\n    GRAY22: 'gray22',\n    GREY22: 'grey22',\n    GRAY21: 'gray21',\n    GREY21: 'grey21',\n    GRAY20: 'gray20',\n    GREY20: 'grey20',\n    GRAY19: 'gray19',\n    GREY19: 'grey19',\n    GRAY18: 'gray18',\n    GREY18: 'grey18',\n    GRAY17: 'gray17',\n    GREY17: 'grey17',\n    GRAY16: 'gray16',\n    GREY16: 'grey16',\n    GRAY15: 'gray15',\n    GREY15: 'grey15',\n    GRAY14: 'gray14',\n    GREY14: 'grey14',\n    GRAY13: 'gray13',\n    GREY13: 'grey13',\n    GRAY12: 'gray12',\n    GREY12: 'grey12',\n    GRAY11: 'gray11',\n    GREY11: 'grey11',\n    GRAY10: 'gray10',\n    GREY10: 'grey10',\n    GRAY9: 'gray9',\n    GREY9: 'grey9',\n    GRAY8: 'gray8',\n    GREY8: 'grey8',\n    GRAY7: 'gray7',\n    GREY7: 'grey7',\n    GRAY6: 'gray6',\n    GREY6: 'grey6',\n    GRAY5: 'gray5',\n    GREY5: 'grey5',\n    GRAY4: 'gray4',\n    GREY4: 'grey4',\n    GRAY3: 'gray3',\n    GREY3: 'grey3',\n    GRAY2: 'gray2',\n    GREY2: 'grey2',\n    GRAY1: 'gray1',\n    GREY1: 'grey1',\n    BLACK: 'black',\n    GRAY0: 'gray0',\n    GREY0: 'grey0',\n    OPAQUE: 'opaque',\n    NONE: 'none',\n    TRANSPARENT: 'transparent'\n};\nexport { Color };\n", "import { Qualifier } from \"../../../../internal/qualifier/Qualifier.js\";\n/**\n * @description Defines the visual appearance of the background.\n * @memberOf Qualifiers.Background\n * @extends {SDK.Qualifier}\n */\nclass BackgroundQualifier extends Qualifier {\n    constructor(backgroundValue) {\n        // The qualifier key for this qualifier\n        super('b');\n        // Such as color (b_red)\n        if (backgroundValue) {\n            this.addValue(backgroundValue);\n        }\n    }\n}\nexport { BackgroundQualifier };\n", "import { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BaseCommonBackground extends BackgroundQualifier {\n    constructor() {\n        super();\n        this._palette = [];\n    }\n    /**\n     * @description Selects the strongest contrasting color to use for padding.\n     * @return {this}\n     */\n    contrast() {\n        this._contrast = true;\n        return this;\n    }\n    /**\n     * @description Defines the custom colors to use when resizing using content-aware padding.\n     * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n     * @return {this}\n     */\n    palette(...colors) {\n        this._palette = colors.map((color) => {\n            return prepareColor(color);\n        });\n        return this;\n    }\n}\nexport { BaseCommonBackground };\n", "import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the border of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoBorderQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:border\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoBorderQualifier };\n", "import { BaseCommonBackground } from \"./BaseCommonBackground.js\";\n/**\n * @description Defines the gradient fade effect to use for the background when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BaseGradientBackground extends BaseCommonBackground {\n    /**\n     *\n     * @description Sets the number of predominant colors to use (2 or 4).\n     * @param {number} num\n     * @return {this}\n     */\n    gradientColors(num) {\n        this._gradientColors = num;\n        return this;\n    }\n    /**\n     * @description Sets the direction for a background gradient fade effect.\n     * @param {Qualifiers.GradientDirection | GradientDirectionType | string} direction Use one of these functions\n     * provided by {@link Qualifiers.GradientDirection|GradientDirection}\n     * @return {this}\n     */\n    gradientDirection(direction) {\n        this._gradientDirection = direction;\n        return this;\n    }\n}\nexport { BaseGradientBackground };\n", "import { BaseGradientBackground } from \"../base/BaseGradientBackground.js\";\n/**\n * @description Specifies that the gradient fade effect, used for the background when resizing with padding, uses the\n * predominant colors in the border pixels of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseGradientBackground}\n */\nclass BackgroundBorderGradientQualifier extends BaseGradientBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:border_gradient\n    ${this._contrast ? '_contrast' : ''}\n    ${this._gradientColors ? `:${this._gradientColors}` : ''}\n    ${this._gradientDirection ? `:${this._gradientDirection}` : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundBorderGradientQualifier };\n", "import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the whole image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoPredominantQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoPredominantQualifier };\n", "import { BaseGradientBackground } from \"../base/BaseGradientBackground.js\";\n/**\n * @description Specifies that the gradient fade effect, used for the background when resizing with padding, uses the\n * predominant colors in the whole of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseGradientBackground}\n */\nclass BackgroundPredominantGradientQualifier extends BaseGradientBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant_gradient\n    ${this._contrast ? '_contrast' : ''}\n    ${this._gradientColors ? `:${this._gradientColors}` : ''}\n    ${this._gradientDirection ? `:${this._gradientDirection}` : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundPredominantGradientQualifier };\n", "import { BackgroundQualifier } from \"./base/BackgroundQualifier.js\";\nexport const DEFAULT_INTENSITY = 100;\nexport const DEFAULT_BRIGHTNESS = 0;\n/**\n * @description A class for blurred background transformations.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BlurredBackgroundAction extends BackgroundQualifier {\n    /**\n     * @description Sets the intensity of the blur.\n     * @param {number} value - The intensity of the blur.\n     */\n    intensity(value) {\n        this.intensityLevel = value;\n        return this;\n    }\n    /**\n     * @description Sets the brightness of the background.\n     * @param {number} value - The brightness of the background.\n     */\n    brightness(value) {\n        this.brightnessLevel = value;\n        return this;\n    }\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function\n     */\n    toString() {\n        // b_blurred:{intensity}:{brightness}\n        const intensity = this.intensityLevel !== undefined ? `:${this.intensityLevel}` : '';\n        const brightness = this.brightnessLevel !== undefined\n            ? this.intensityLevel !== undefined\n                ? `:${this.brightnessLevel}`\n                : `:${DEFAULT_INTENSITY}:${this.brightnessLevel}`\n            : '';\n        return `b_blurred${intensity}${brightness}`;\n    }\n}\nexport default BlurredBackgroundAction;\n", "export const encodePromptComponent = (prompt) => composeStringOperations(encodeURIComponent, replaceMissingChars, decodeSpaces)(prompt);\nconst charsMissingFromUrlEncode = /[!'()*~_.-]/g;\nconst missingCharsMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '*': '%2A',\n    '~': '%7E',\n    _: '%5F',\n    '.': '%2E',\n    '-': '%2D',\n};\nconst replaceMissingChars = (str) => {\n    return str.replace(charsMissingFromUrlEncode, (match) => { var _a; return (_a = missingCharsMap[match]) !== null && _a !== void 0 ? _a : match; });\n};\nconst decodeSpaces = (str) => str.replace(/%20/g, ' ');\nconst composeStringOperations = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\n", "import { encodePromptComponent } from \"../../../internal/utils/encodePromptComponents.js\";\nimport { BackgroundQualifier } from \"./base/BackgroundQualifier.js\";\n/**\n * @description Automatically fills the padded area using generative AI to extend the image seamlessly.\n * Optionally include a prompt to guide the image generation.\n * @memberOf Qualifiers.Background\n */\nclass BackgroundGenerativeFillQualifier extends BackgroundQualifier {\n    constructor() {\n        super(\"gen_fill\");\n        this._backgroundType = 'generativeFill';\n    }\n    prompt(prompt) {\n        try {\n            this._prompt = decodeURIComponent(prompt);\n        }\n        catch (_a) {\n            this._prompt = prompt;\n        }\n        return this;\n    }\n    getPrompt() {\n        return this._prompt;\n    }\n    getBackgroundType() {\n        return this._backgroundType;\n    }\n    /**\n     * @description\n     * Override the toString() function to explicitly stringify the qualifier.\n     */\n    toString() {\n        return `b_gen_fill${this._prompt ? `:prompt_${encodePromptComponent(this._prompt)}` : ''}`;\n    }\n}\nexport { BackgroundGenerativeFillQualifier };\n", "import { prepareColor } from \"../internal/utils/prepareColor.js\";\nimport { BackgroundAutoBorderQualifier } from \"./background/shared/auto/BackgroundAutoBorderQualifier.js\";\nimport { BackgroundBorderGradientQualifier } from \"./background/shared/gradient/BackgroundBorderGradientQualifier.js\";\nimport { BackgroundAutoPredominantQualifier } from \"./background/shared/auto/BackgroundAutoPredominantQualifier.js\";\nimport { BackgroundPredominantGradientQualifier } from \"./background/shared/gradient/BackgroundPredominantGradientQualifier.js\";\nimport BlurredBackgroundAction from \"./background/shared/BlurredBackgroundAction.js\";\nimport { BackgroundQualifier } from \"./background/shared/base/BackgroundQualifier.js\";\nimport { BackgroundGenerativeFillQualifier } from \"./background/shared/BackgroundGenerativeFillQualifier.js\";\n/**\n * @description Defines the background color to use instead of transparent background areas or when resizing with padding.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#setting_background_color|Setting background for images} | {@link https://cloudinary.com/documentation/video_effects_and_enhancements#background_color|Setting background for videos}\n *\n * @namespace Background\n * @memberOf Qualifiers\n */\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking only the image border pixels into account.\n * @memberOf Qualifiers.Background\n * @return {BackgroundAutoBorderQualifier}\n */\nfunction border() {\n    return new BackgroundAutoBorderQualifier();\n}\n/**\n * @summary qualifier\n * @description Automatically determines the color to use for padding, if needed when resizing an asset.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#content_aware_padding|Content-aware padding}\n * @memberOf Qualifiers.Background\n * @return {Qualifiers.Background.BackgroundQualifier}\n */\nfunction auto() {\n    return new BackgroundQualifier('auto');\n}\n/**\n * @summary qualifier\n * @description Applies a padding gradient fade effect using the predominant colors in the border of the image.\n * @memberOf Qualifiers.Background\n * @return {BackgroundBorderGradientQualifier}\n */\nfunction borderGradient() {\n    return new BackgroundBorderGradientQualifier();\n}\n/**\n * @summary qualifier\n * @description Applies a padding gradient fade effect using the predominant colors in the image.\n * @memberOf Qualifiers.Background\n * @return {BackgroundPredominantGradientQualifier}\n */\nfunction predominantGradient() {\n    return new BackgroundPredominantGradientQualifier();\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account\n * @memberOf Qualifiers.Background\n * @return {BackgroundAutoPredominantQualifier}\n */\nfunction predominant() {\n    return new BackgroundAutoPredominantQualifier();\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account.\n * @memberOf Qualifiers.Background\n * @return {Qualifiers.Background.BackgroundQualifier}\n */\nfunction color(colorStr) {\n    return new BackgroundQualifier(prepareColor(colorStr));\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account.\n * @memberOf Qualifiers.Background\n * @return {BlurredBackgroundAction}\n */\nfunction blurred() {\n    return new BlurredBackgroundAction();\n}\n/**\n * @summary qualifier\n * @description A qualifier that automatically fills the padded area using generative AI to extend the image seamlessly.\n * @memberOf Qualifiers.Background\n * @return {BackgroundGenerativeFillQualifier}\n */\nfunction generativeFill() {\n    return new BackgroundGenerativeFillQualifier();\n}\nconst Background = {\n    auto,\n    border,\n    borderGradient,\n    predominantGradient,\n    predominant,\n    color,\n    blurred,\n    generativeFill\n};\nexport { auto, border, borderGradient, predominantGradient, predominant, color, blurred, generativeFill, Background };\n", "/**\n * @description Controls the audio sampling frequency.\n * @namespace AudioFrequency\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n/**\n * @summary qualifier\n * @description Preserves the original audio frequency of the video when used with vc_auto.\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction ORIGINAL() {\n    return 'iaf';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ192000() {\n    return 192000;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ176400() {\n    return 176400;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ96000() {\n    return 96000;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ88200() {\n    return 88200;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ48000() {\n    return 48000;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ8000() {\n    return 8000;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ11025() {\n    return 11025;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ16000() {\n    return 16000;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ22050() {\n    return 22050;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ32000() {\n    return 32000;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ37800() {\n    return 37800;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ44056() {\n    return 44056;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ44100() {\n    return 44100;\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioFrequency\n */\nfunction FREQ47250() {\n    return 47250;\n}\nconst AudioFrequency = {\n    FREQ8000,\n    FREQ11025,\n    FREQ16000,\n    FREQ22050,\n    FREQ32000,\n    FREQ37800,\n    FREQ44056,\n    FREQ44100,\n    FREQ47250,\n    FREQ48000,\n    FREQ88200,\n    FREQ96000,\n    FREQ176400,\n    FREQ192000,\n    ORIGINAL\n};\nexport { AudioFrequency, FREQ8000, FREQ11025, FREQ16000, FREQ22050, FREQ32000, FREQ37800, FREQ44056, FREQ44100, FREQ47250, FREQ48000, FREQ88200, FREQ96000, FREQ176400, FREQ192000, ORIGINAL };\n", "/**\n * @description Contains functions to select an audio codec.\n * @memberOf Qualifiers\n * @namespace AudioCodec\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n/**\n * @summary qualifier\n * @description Removes the audio channel from the video, effectively muting it.\n * @memberOf Qualifiers.AudioCodec\n */\nfunction none() {\n    return 'none';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioCodec\n */\nfunction aac() {\n    return 'aac';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioCodec\n */\nfunction vorbis() {\n    return 'vorbis';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioCodec\n */\nfunction mp3() {\n    return 'mp3';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AudioCodec\n */\nfunction opus() {\n    return 'opus';\n}\nconst AudioCodec = {\n    aac,\n    mp3,\n    opus,\n    none,\n    vorbis\n};\nexport { AudioCodec, aac, mp3, opus, none, vorbis };\n", "import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.AspectRatio\n * @extends {SDK.QualifierValue}\n */\nexport class AspectRatioQualifierValue extends QualifierValue {\n}\n", "import { AspectRatioQualifierValue } from \"./aspectRatio/AspectRatioQualifierValue.js\";\nimport { ignoreInitialAspectRatio as ignoreInitialAspectRatioFlag } from \"./flag.js\";\n/**\n * @description 1 by 1 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar1X1() {\n    return new AspectRatioQualifierValue('1:1');\n}\n/**\n * @summary qualifier\n * @description 5 by 4 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar5X4() {\n    return new AspectRatioQualifierValue('5:4');\n}\n/**\n * @summary qualifier\n * @description 4 by 3 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar4X3() {\n    return new AspectRatioQualifierValue('4:3');\n}\n/**\n * @summary qualifier\n * @description 3 by 2 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar3X2() {\n    return new AspectRatioQualifierValue('3:2');\n}\n/**\n * @summary qualifier\n * @description 16 by 9 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar16X9() {\n    return new AspectRatioQualifierValue('16:9');\n}\n/**\n * @summary qualifier\n * @description 3 by 1 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar3X1() {\n    return new AspectRatioQualifierValue('3:1');\n}\n/**\n * @summary qualifier\n * @description ignores aspect ratio.\n * @memberOf Qualifiers.AspectRatio\n * @return {IgnoreAspectRatioQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n    return ignoreInitialAspectRatioFlag();\n}\n/**\n * @summary qualifier\n * @description A list of all most commonly used aspect ratios. including an ‘ignore aspect ratio’ option which direct the BE to not stick to the original aspect ratio.\n * This is used in the context of resize actions\n * @namespace AspectRatio\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Resize|Resize} for an example\n */\nconst AspectRatio = {\n    ar1X1,\n    ar5X4,\n    ar3X1,\n    ar3X2,\n    ar4X3,\n    ar16X9,\n    ignoreInitialAspectRatio\n};\nexport { ar1X1, ar5X4, ar3X1, ar3X2, ar4X3, ar16X9, ignoreInitialAspectRatio, AspectRatio };\n", "/**\n * @description Contains methods to specify the type of artistic filter </br>\n * Learn more: {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#artistic_filter_effects|Artistic Filter}\n * @namespace ArtisticFilter\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction alDente() {\n    return 'al_dente';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction athena() {\n    return 'athena';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction audrey() {\n    return 'audrey';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction aurora() {\n    return 'aurora';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction daguerre() {\n    return 'daguerre';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction eucalyptus() {\n    return 'eucalyptus';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction fes() {\n    return 'fes';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction frost() {\n    return 'frost';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction hairspray() {\n    return 'hairspray';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction hokusai() {\n    return 'hokusai';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction incognito() {\n    return 'incognito';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction linen() {\n    return 'linen';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction peacock() {\n    return 'peacock';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction primavera() {\n    return 'primavera';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction quartz() {\n    return 'quartz';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction redRock() {\n    return 'red_rock';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction refresh() {\n    return 'refresh';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction sizzle() {\n    return 'sizzle';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction sonnet() {\n    return 'sonnet';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction ukulele() {\n    return 'ukulele';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ArtisticFilter\n */\nfunction zorro() {\n    return 'zorro';\n}\nconst ArtisticFilter = {\n    alDente,\n    athena,\n    audrey,\n    aurora,\n    daguerre,\n    eucalyptus,\n    hairspray,\n    hokusai,\n    peacock,\n    primavera,\n    quartz,\n    incognito,\n    redRock,\n    sizzle,\n    fes,\n    linen,\n    refresh,\n    sonnet,\n    ukulele,\n    frost,\n    zorro\n};\nexport { ArtisticFilter, alDente, athena, audrey, aurora, daguerre, eucalyptus, hairspray, hokusai, peacock, primavera, quartz, incognito, redRock, sizzle, fes, linen, refresh, sonnet, ukulele, frost, zorro };\n", "import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.AnimatedFormat\n * @extends {SDK.QualifierValue}\n */\nclass AnimatedFormatQualifierValue extends QualifierValue {\n}\nexport { AnimatedFormatQualifierValue };\n", "import { AnimatedFormatQualifierValue } from \"./animatedFormat/AnimatedFormatQualifierValue.js\";\n/**\n * @description Contains methods to specify the animated format\n * @namespace AnimatedFormat\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n/**\n * @description Automatically sets the animated format\n * @summary qualifier\n * @memberOf Qualifiers.AnimatedFormat\n * @return {Qualifiers.AnimatedFormatQualifierValue}\n */\nfunction auto() {\n    return new AnimatedFormatQualifierValue('auto');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AnimatedFormat\n * @return {Qualifiers.AnimatedFormatQualifierValue}\n */\nfunction gif() {\n    return new AnimatedFormatQualifierValue('gif');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AnimatedFormat\n * @return {Qualifiers.AnimatedFormatQualifierValue}\n */\nfunction webp() {\n    return new AnimatedFormatQualifierValue('webp');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.AnimatedFormat\n * @return {Qualifiers.AnimatedFormatQualifierValue}\n */\nfunction png() {\n    return new AnimatedFormatQualifierValue('png');\n}\nconst AnimatedFormat = { auto, gif, webp, png };\nexport { auto, gif, webp, png, AnimatedFormat };\n", "/**\n * @summary qualifier\n * @memberOf Qualifiers.ChromeSubSampling\n */\nfunction chroma444() { return 444; }\n/**\n * @summary qualifier\n * @memberOf Qualifiers.ChromeSubSampling\n */\nfunction chroma420() { return 420; }\n/**\n * @description Contains functions to select the chroma subsampling setting.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/image_optimization#toggle_chroma_subsampling|Toggling chroma subsampling}\n * @memberOf Qualifiers\n * @namespace ChromeSubSampling\n * @see To be used in {@link Actions.Delivery|Delivery} action (Quality)\n * @see To be used in {@link Actions.Delivery.DeliveryQualityAction|Quality Action} class\n */\nconst ChromaSubSampling = {\n    chroma444,\n    chroma420\n};\nexport { ChromaSubSampling, chroma420, chroma444 };\n", "/**\n * @description Contains functions to select the device pixel ratio.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/resizing_and_cropping#set_device_pixel_ratio_dpr|Set Device Pixel Ratio}\n * @memberOf Qualifiers\n * @namespace DPR\n * @see Visit {@link Actions.Delivery.dpr|Delivery DPR} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.DPR\n */\nfunction auto() {\n    return 'auto';\n}\nconst Dpr = {\n    auto\n};\nexport { auto, Dpr };\n", "/**\n * @description Defines how the background gradient fade effect is applied.\n * @memberOf Qualifiers\n * @namespace GradientFade\n */\n/**\n * @summary qualifier\n * @description Instructs the gradient fade to be applied symmetrically (to opposite edges of the image).\n * @memberOf Qualifiers.GradientFade\n * @return {string}\n */\nfunction symmetric() {\n    return 'symmetric';\n}\n/**\n * @summary qualifier\n * @description Instructs the gradient fade to be applied symmetrically (to opposite edges of the image) including background padding.\n * @memberOf Qualifiers.GradientFade\n * @return {string}\n */\nfunction symmetricPad() {\n    return 'symmetric_pad';\n}\nconst GradientFade = {\n    symmetric,\n    symmetricPad\n};\nexport { GradientFade, symmetricPad, symmetric };\n"],
  "mappings": "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ACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,aAAa;AACjB;;;ACpqBA,IAAM,sBAAN,cAAkC,UAAU;AAAA,EACxC,YAAY,iBAAiB;AAEzB,UAAM,GAAG;AAET,QAAI,iBAAiB;AACjB,WAAK,SAAS,eAAe;AAAA,IACjC;AAAA,EACJ;AACJ;;;ACRA,IAAM,uBAAN,cAAmC,oBAAoB;AAAA,EACnD,cAAc;AACV,UAAM;AACN,SAAK,WAAW,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACP,SAAK,YAAY;AACjB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,QAAQ;AACf,SAAK,WAAW,OAAO,IAAI,CAACC,WAAU;AAClC,aAAO,aAAaA,MAAK;AAAA,IAC7B,CAAC;AACD,WAAO;AAAA,EACX;AACJ;;;ACxBA,IAAM,gCAAN,cAA4C,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM7D,WAAW;AACP,WAAO;AAAA;AAAA,MAET,KAAK,YAAY,cAAc,EAAE;AAAA,MACjC,KAAK,SAAS,SAAS,YAAY,KAAK,SAAS,KAAK,GAAG,CAAC,KAAK,EAAE;AAAA,MACjE,QAAQ,QAAQ,EAAE;AAAA,EACpB;AACJ;;;ACdA,IAAM,yBAAN,cAAqC,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtD,eAAe,KAAK;AAChB,SAAK,kBAAkB;AACvB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkB,WAAW;AACzB,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACX;AACJ;;;ACpBA,IAAM,oCAAN,cAAgD,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnE,WAAW;AACP,WAAO;AAAA;AAAA,MAET,KAAK,YAAY,cAAc,EAAE;AAAA,MACjC,KAAK,kBAAkB,IAAI,KAAK,eAAe,KAAK,EAAE;AAAA,MACtD,KAAK,qBAAqB,IAAI,KAAK,kBAAkB,KAAK,EAAE;AAAA,MAC5D,KAAK,SAAS,SAAS,YAAY,KAAK,SAAS,KAAK,GAAG,CAAC,KAAK,EAAE;AAAA,MACjE,QAAQ,QAAQ,EAAE;AAAA,EACpB;AACJ;;;ACfA,IAAM,qCAAN,cAAiD,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlE,WAAW;AACP,WAAO;AAAA;AAAA,MAET,KAAK,YAAY,cAAc,EAAE;AAAA,MACjC,KAAK,SAAS,SAAS,YAAY,KAAK,SAAS,KAAK,GAAG,CAAC,KAAK,EAAE;AAAA,MACjE,QAAQ,QAAQ,EAAE;AAAA,EACpB;AACJ;;;ACbA,IAAM,yCAAN,cAAqD,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxE,WAAW;AACP,WAAO;AAAA;AAAA,MAET,KAAK,YAAY,cAAc,EAAE;AAAA,MACjC,KAAK,kBAAkB,IAAI,KAAK,eAAe,KAAK,EAAE;AAAA,MACtD,KAAK,qBAAqB,IAAI,KAAK,kBAAkB,KAAK,EAAE;AAAA,MAC5D,KAAK,SAAS,SAAS,YAAY,KAAK,SAAS,KAAK,GAAG,CAAC,KAAK,EAAE;AAAA,MACjE,QAAQ,QAAQ,EAAE;AAAA,EACpB;AACJ;;;ACrBO,IAAM,oBAAoB;AAC1B,IAAM,qBAAqB;AAMlC,IAAM,0BAAN,cAAsC,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtD,UAAU,OAAO;AACb,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,OAAO;AACd,SAAK,kBAAkB;AACvB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AAEP,UAAM,YAAY,KAAK,mBAAmB,SAAY,IAAI,KAAK,cAAc,KAAK;AAClF,UAAM,aAAa,KAAK,oBAAoB,SACtC,KAAK,mBAAmB,SACpB,IAAI,KAAK,eAAe,KACxB,IAAI,iBAAiB,IAAI,KAAK,eAAe,KACjD;AACN,WAAO,YAAY,SAAS,GAAG,UAAU;AAAA,EAC7C;AACJ;AACA,IAAO,kCAAQ;;;ACzCR,IAAM,wBAAwB,CAAC,WAAW,wBAAwB,oBAAoB,qBAAqB,YAAY,EAAE,MAAM;AACtI,IAAM,4BAA4B;AAClC,IAAM,kBAAkB;AAAA,EACpB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,GAAG;AAAA,EACH,KAAK;AAAA,EACL,KAAK;AACT;AACA,IAAM,sBAAsB,CAAC,QAAQ;AACjC,SAAO,IAAI,QAAQ,2BAA2B,CAAC,UAAU;AAAE,QAAI;AAAI,YAAQ,KAAK,gBAAgB,KAAK,OAAO,QAAQ,OAAO,SAAS,KAAK;AAAA,EAAO,CAAC;AACrJ;AACA,IAAM,eAAe,CAAC,QAAQ,IAAI,QAAQ,QAAQ,GAAG;AACrD,IAAM,0BAA0B,IAAI,QAAQ,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG;;;ACVzF,IAAM,oCAAN,cAAgD,oBAAoB;AAAA,EAChE,cAAc;AACV,UAAM,UAAU;AAChB,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EACA,OAAO,QAAQ;AACX,QAAI;AACA,WAAK,UAAU,mBAAmB,MAAM;AAAA,IAC5C,SACO,IAAI;AACP,WAAK,UAAU;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAAA,EACA,YAAY;AACR,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,oBAAoB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACP,WAAO,aAAa,KAAK,UAAU,WAAW,sBAAsB,KAAK,OAAO,CAAC,KAAK,EAAE;AAAA,EAC5F;AACJ;;;ACZA,SAAS,SAAS;AACd,SAAO,IAAI,8BAA8B;AAC7C;AASA,SAASC,QAAO;AACZ,SAAO,IAAI,oBAAoB,MAAM;AACzC;AAOA,SAAS,iBAAiB;AACtB,SAAO,IAAI,kCAAkC;AACjD;AAOA,SAAS,sBAAsB;AAC3B,SAAO,IAAI,uCAAuC;AACtD;AAOA,SAAS,cAAc;AACnB,SAAO,IAAI,mCAAmC;AAClD;AAOA,SAAS,MAAM,UAAU;AACrB,SAAO,IAAI,oBAAoB,aAAa,QAAQ,CAAC;AACzD;AAOA,SAAS,UAAU;AACf,SAAO,IAAI,gCAAwB;AACvC;AAOA,SAAS,iBAAiB;AACtB,SAAO,IAAI,kCAAkC;AACjD;AACA,IAAM,aAAa;AAAA,EACf,MAAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ACxFA,SAAS,WAAW;AAChB,SAAO;AACX;AAKA,SAAS,aAAa;AAClB,SAAO;AACX;AAKA,SAAS,aAAa;AAClB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,WAAW;AAChB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AACA,IAAM,iBAAiB;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ACrHA,SAASC,QAAO;AACZ,SAAO;AACX;AAKA,SAAS,MAAM;AACX,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,MAAM;AACX,SAAO;AACX;AAKA,SAAS,OAAO;AACZ,SAAO;AACX;AACA,IAAM,aAAa;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAAA;AAAA,EACA;AACJ;;;AC3CO,IAAM,4BAAN,cAAwC,eAAe;AAC9D;;;ACCA,SAAS,QAAQ;AACb,SAAO,IAAI,0BAA0B,KAAK;AAC9C;AAOA,SAAS,QAAQ;AACb,SAAO,IAAI,0BAA0B,KAAK;AAC9C;AAOA,SAAS,QAAQ;AACb,SAAO,IAAI,0BAA0B,KAAK;AAC9C;AAOA,SAAS,QAAQ;AACb,SAAO,IAAI,0BAA0B,KAAK;AAC9C;AAOA,SAAS,SAAS;AACd,SAAO,IAAI,0BAA0B,MAAM;AAC/C;AAOA,SAAS,QAAQ;AACb,SAAO,IAAI,0BAA0B,KAAK;AAC9C;AAOA,SAASC,4BAA2B;AAChC,SAAO,yBAA6B;AACxC;AASA,IAAM,cAAc;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,0BAAAA;AACJ;;;ACrEA,SAAS,UAAU;AACf,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,WAAW;AAChB,SAAO;AACX;AAKA,SAAS,aAAa;AAClB,SAAO;AACX;AAKA,SAAS,MAAM;AACX,SAAO;AACX;AAKA,SAAS,QAAQ;AACb,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,UAAU;AACf,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,QAAQ;AACb,SAAO;AACX;AAKA,SAAS,UAAU;AACf,SAAO;AACX;AAKA,SAAS,YAAY;AACjB,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,UAAU;AACf,SAAO;AACX;AAKA,SAAS,UAAU;AACf,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,SAAS;AACd,SAAO;AACX;AAKA,SAAS,UAAU;AACf,SAAO;AACX;AAKA,SAAS,QAAQ;AACb,SAAO;AACX;AACA,IAAM,iBAAiB;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;AC3KA,IAAM,+BAAN,cAA2C,eAAe;AAC1D;;;ACOA,SAASC,QAAO;AACZ,SAAO,IAAI,6BAA6B,MAAM;AAClD;AAMA,SAASC,OAAM;AACX,SAAO,IAAI,6BAA6B,KAAK;AACjD;AAMA,SAASC,QAAO;AACZ,SAAO,IAAI,6BAA6B,MAAM;AAClD;AAMA,SAASC,OAAM;AACX,SAAO,IAAI,6BAA6B,KAAK;AACjD;AACA,IAAM,iBAAiB,EAAE,MAAAH,OAAM,KAAAC,MAAK,MAAAC,OAAM,KAAAC,KAAI;;;ACpC9C,SAAS,YAAY;AAAE,SAAO;AAAK;AAKnC,SAAS,YAAY;AAAE,SAAO;AAAK;AASnC,IAAM,oBAAoB;AAAA,EACtB;AAAA,EACA;AACJ;;;ACVA,SAASC,QAAO;AACZ,SAAO;AACX;AACA,IAAM,MAAM;AAAA,EACR,MAAAA;AACJ;;;ACLA,SAAS,YAAY;AACjB,SAAO;AACX;AAOA,SAAS,eAAe;AACpB,SAAO;AACX;AACA,IAAM,eAAe;AAAA,EACjB;AAAA,EACA;AACJ;",
  "names": ["auto", "color", "auto", "none", "ignoreInitialAspectRatio", "auto", "gif", "webp", "png", "auto"]
}
